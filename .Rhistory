missing <- numbers[!numbers %in% x]
return(missing)
}
x <- c(1, 1, 3, 5, 7, 9, 2, 3)
y <- missing_numbers(x)
print(y) # wyświetli 0 4 6 8
x <- c(1,3,5,3,1,2,7)
missing_numbers <- function(x){
numbers <- 0:9
missing <- numbers[!numbers %in% x]
return(missing)
}
x <- c(1, 1, 3, 5, 7, 9, 2, 3)
x <- c(1,3,5,3,1,2,7)
y <- missing_numbers(x)
print(y) # wyświetli 0 4 6 8
w1plus2w2<- function(x){
w1(x)+2*w2(x)
}
int_W1 <- function(a){
integrate(w1, lower=-a, upper=a)$value
}
W1plusW2 <- function(x) { w1(x) + w2(x) }
pochodna <- function(x) { 6*x^5 + 3*x^2 - 2*x + 9 }
---
title: "Untitled"
```{r setup, include=FALSE}
install.packages(c("devtools", "roxygen2"))
r<- -10:10
r[2]
[1] -3  -2  -1  0  1
rep(-3:1, times=1)
seq(-3, 1, by=1)
rep(-3:1, len=5)
x <- 0:6
as.numeric(x)
v <- c(2, 1, 5, 4, 1, 3)
w <- c(3, 2, 6, 1, 4, 8)
match(v,w)
object()
object(x)
objects(x)
objects()
v <- c(2, 1, 5, 4, 1, 3)
w <- c(3, 2, 6, 1, 4, 8)
match(w,v)
is.na(x)
x <- c(1, NaN, 2, NA, 4)
is.na(x)
v <- c(2, 1, 5, 4, 1, 3)
w <- c(3, 2, 6, 1, 4, 8)
setdiff(v,w)
v <- c(2.3, 1.4, 5.3, 1.2, 0.3, 4.1)
v[-c(1,3,6)]
print(sqrt(-2:2))
b <- c(TRUE, 1.0, -1.0+0.5i)
as.complex(b)
a <- c(1.0+1.0i,'4.0', FALSE)
as.numeric(a)
x <- c(1+0i, 2+4i)
x
x = c(TRUE, FALSE)
x
x <- c(T, F)
x
x <- factor(c("yes", "no", "no", yes, "no"))
x <- factor(c("yes", "yes", "yes"), c("no", "no"))
x
x <- factor(c("yes", "yes", "yes"), c("no", "no"))
x <- factor("yes", "yes", "no", "yes", "no")
x <- factor(c("yes", "yes", "no", "yes", "no"))
print(ab)
ab <- list(1, 2, 3, "X", "Y", "Z")
dim(ab) <- c(3,2)
print(ab)
p <- c(2,7,8); q <- c("A", "B", "C")
x <- list(p, q)
x[2]
(x <- list(1, "a", TRUE, 1 + 4i))
a <- list ("x"=5, "y"=10, "z"=15)
a
sum(unlist(a))
sum(as.vector(a))
sum(a)
lapply(x, runif, min = 1, max = 10)
x <- 4:1
lapply(x, runif, min = 1, max = 10)
x <- 1:4
lapply(x, runif, min = -8, max = 8)
x <- 1:4
lapply(x, runif, min = 0, max = 10)
x <- 1:4
lapply(x, runif, min = 0, max = 7)
x <- 4:1
lapply(x, runif, min = 1, max = 10)
x <- 1:4
lapply(x, runif, min = -8, max = 8)
x <- 1:4
lapply(x, runif, min = 0, max = 10)
A <- diag(5)
A[1, which.max(A[,1])]
A[which.max(A[,1])]
A[1, which.max(A[1,])]
dim(m)
m <- matrix(nrow = 2, ncol = 3)
dim(m)
matrix(1:6, 2, 3)
apply(x,c(1,2),sum)
x <- 4:15
dim(x) <- c(2,3,2)
dimnames(x) <- list(c("x1","x2"), c("y1","y2","y3"), c("A","B"))
apply(x,c(1,2),sum)
matrix(1:9, 3, 3)
# Obliczanie wartości własnych
eigenvalues <- eigen(matrix)$values
# Wyświetlanie wartości własnych
print(eigenvalues)
matrix(1:9, 3, 3)
# Obliczanie wartości własnych
eigenvalues <- eigen(matrix)$values
# Wyświetlanie wartości własnych
print(eigenvalues)
# Tworzenie macierzy
matrix <- matrix(1:9, 3, 3)
# Obliczanie wartości własnych
eigenvalues <- eigen(matrix)$values
# Wyświetlanie wartości własnych
print(eigenvalues)
(matrix(1:6, nrow = 2, ncol = 3))
x <- matrix(1:6, 2, 3)
x[ , 2]
x <- 1:3
y <- 10:12
rbind(x, y)
ag <- aggregate(mtcars["hp"], mtcars["cyl"], FUN=mean)
ag$size <- cut(ag$hp,c(0,100,200,300),c("small","medium","large"))
split(ag, ag$size)[[1]]
(x <- data.frame(1:4, c(T, F, T, F), names=c("ip","val")))
(x <- data.frame(ip = 1:4, val = c(T, F)))
ag <- aggregate(mtcars["hp"], mtcars["cyl"], FUN=mean)
ag$size <- cut(ag$hp,c(0,100,200,300),c("small","medium","large"))
ag$rozmiar <- cut(ag$hp,c(0,100,200,300),c("maly","sredni","duzy"))
mag <- merge(ag$size, ag$rozmiar)
mag[c(1,3,6,9)]
ag <- aggregate(mtcars["hp"], mtcars["cyl"], FUN=mean)
ag$size <- cut(ag$hp,c(0,100,200,300),c("small","medium","large"))
ag$rozmiar <- cut(ag$hp,c(0,100,200,300),c("maly","sredni","duzy"))
mag <- merge(ag$size, ag$rozmiar)
mag[c(1,3,6,9)]
mag[,c(1,3,6,9)]
mag[c(1,3,6,9),]
(x <- data.frame(1:4, c(T, F), names=c("ip","val")))
f <- function(num) {
for(i in seq_len(num)) {
cat("Iteracja", i, "!","\n")
}
}
f(3)
unction(x) {
g <- function(x) {
a <- 3
x+a+y10
}
g(2)
f <- function(num = 3) {
pr <- "Funkcja!\n"
for(i in seq_len(num))  cat(pr)
(ch <- nchar(pr) * num)
}
f()
Norm <- function(x, mu, sigma) {
par <- 1/(sigma*sqrt(2*pi))
# funkcja gestosci rozkladu normalnego
a <- (x-mu)^2
b <- -0.5/(sigma^2)
par*exp(a*b)
}
Norm(-1.5, 0, 1)
x <- 5
f <- function(x){
return(x)
}
class(f(x))
f <- function() {
print("Pusta funkcja")
}
f()
f <- function(a, b) a^2
f(,2)
Sys.Time()
Sys.time()
w <- c(3.4, 2.6, -1.4, 0.5, 5.2, -6.3, 3.3)
fmean <- function(w){
stopifnot(length(w) >= 1)
stopifnot(!is.na(w))
wm <- mean(w)
print(wm)
which(w > wm)
}
fmean(w)
x = c(1,2,3)
mean(x)
traceback()
mean(x)
traceback()
traceback(x)
x = c(1,2,3)
mean(x)
traceback(x)
traceback()
traceback(x)
i <- -2
while (i > -5 & i < 12) {
print(i)
i = i+2
}
log(c(-1, 2))
log(c(-1, 2))
x <- -2:10
for (it in x) {
if (it > 6) break
print(it)
}
<- c(5,7,2,9,6,4,0,1)
a<- c(5,7,2,9,6,4,0,1)
ifelse(a %% 2 == 0,"even","odd")
Prt <- function(x) {
if(x > 0) print("x is greater than zero")
else print("x is less than or equal to zero")
invisible(x)
}
Prt(NA)
install.packages('eval')
getwd()
setwd('C:\Users\pc\Desktop\STUDIA\SEMESTR 4\STATYSTYKA')
setwd('C:/Users/pc/Desktop/STUDIA/SEMESTR 4/STATYSTYKA')
install.packages("readxl")
read_excel('BEZROBOTNI_REJESTROWANI.xlsx')
library(readxl)
read_excel('BEZROBOTNI_REJESTROWANI.xlsx')
read_excel('BEZROBOTNI_REJESTROWANI.xlsx', 2)
dane <- read_excel('BEZROBOTNI_REJESTROWANI.xlsx', 2)
View(dane)
library(dplyr)
dane <- dane %>% slice(-1)
View(dane)
dane <- read_excel('BEZROBOTNI_REJESTROWANI.xlsx', 2)
dane <- dane %>% slice(-c(1,3)
dane <- dane %>% slice(-c(1,3))
dane <- read_excel('BEZROBOTNI_REJESTROWANI.xlsx', 2)
dane <- dane %>% slice(-c(1,3))
View(dane)
cnames <- bind_rows(dane[1, ], dane[2, ]) %>%
summarise_all(toString)
dane <- dane[-c(1, 2), ]
dane <- bind_rows(cnames, dane)
View(dane)
dane <- read_excel('BEZROBOTNI_REJESTROWANI.xlsx', 2, headers = F)
dane <- read_excel('BEZROBOTNI_REJESTROWANI.xlsx', 2, col_names =  F)
View(dane)
dane <- dane %>% slice(-c(2,4))
cnames <- bind_rows(dane[1, ], dane[2, ]) %>%
summarise_all(toString)
dane <- dane[-c(1, 2), ]
dane <- bind_rows(cnames, dane)
dane <- read_excel('BEZROBOTNI_REJESTROWANI.xlsx', 2, col_names =  F)
View(dane)
kod_nazwa <- dane[1, 1:2]
kod_nazwa
dane <- dane %>% slice(-c(2,4))
View(dane)
lata <- dane[2, 1:12]
lata
lata <- dane[2, -(1:2)]
lata
miesiace <- dane[-(1:2)]
miesiace
miesiace <- dane[1,-(1:2)]
miesiace
nowy_wiersz <- c(kod_nazwa, rep(lata, each = length(miesiace)), miesiace)
nowy_wiersz
dane <- rbind(nowy_wiersz, dane[-c(1, 2), ])
kod_nazwa
lata
lata
View(dane)
names(dane) <- dane[1]
names(dane) <- dane[1,]
dane <- dane[-1,]
dane <- read_excel('BEZROBOTNI_REJESTROWANI.xlsx', 2, col_names =  F)
dane <- dane %>% slice(-c(2,4))
miesiace <- colnames(dane)[-c(1:2)]
miesiace
miesiace <- dane[1,-(1:2)]
miesiace
nazwy_miesiecy <- rep(miesiace, each = 12)
kolumny_do_usuniecia <- colSums(is.na(dane[3, -(1:2)])) > 0
nazwy_miesiecy <- nazwy_miesiecy[!kolumny_do_usuniecia]
nazwy_miesiecy
miesiace <- dane [1, 3]
miesiace
miesiace <- dane [1, 3:]
miesiace <- dane [1, seq(from = 3, to = ncol(dane), by =12)]
miesiace
co<-seq(from = 3, to = ncol(dane), by =12)
co
miesiace <- dane [1, seq(from = 3, to = ncol(dane), by =14)]
miesiace
nazwy_miesiecy <- rep(miesiace, each = 12)
nazwy_miesiecy
miesiace <- dane [1, seq(from = 3, to = ncol(dane), by =14)]
nazwy_miesiecy <- rep(miesiace, each = 14)
nazwy_miesiecy
View(nazwy_miesiecy)
nazwy_miesiecy <- c()
nazwy_miesiecy <- c(rep(miesiace, each = 14)
)
View(nazwy_miesiecy)
nazwy_miesiecy <- c(rep(miesiace, each = 14))
miesiace <- dane [1, seq(from = 3, to = ncol(dane), by =14)]
miesiace
miesiace <- c(dane [1, seq(from = 3, to = ncol(dane), by =14)])
miesiace
nazwy_miesiecy <- c(rep(miesiace, each = 14))
View(nazwy_miesiecy)
miesiace <- as.string(dane [1, seq(from = 3, to = ncol(dane), by =14)])
miesiace <- as.character(dane [1, seq(from = 3, to = ncol(dane), by =14)])
miesiace
nazwy_miesiecy <- c(rep(miesiace, each = 14))
View(nazwy_miesiecy)
nazwy_miesiecy <- rep(miesiace, each = 14)
View(nazwy_miesiecy)
kod_nazwa <- dane[1, 1:2]
kod_nazwa <- dane[1, c(1:2)]
dane <- read_excel('BEZROBOTNI_REJESTROWANI.xlsx', 2, col_names =  F)
View(dane)
dane <- dane %>% slice(-c(2,4))
kod_nazwa <- dane[1, c(1:2)]
kod_nazwa <- dane[1,]
kod_nazwa
kod_nazwa <- dane[1,1]
kod_nazwa <- dane[,1]
kod_nazwa1 <- dane[,1]
library(readxl)
dane <- read_excel('BEZROBOTNI_REJESTROWANI.xlsx', 2, col_names =  F)
View(dane)
dane <- dane %>% slice(-c(2,4))
library(dplyr)
dane <- dane %>% slice(-c(2,4))
miesiace <- as.character(dane [1, seq(from = 3, to = ncol(dane), by =14)])
miesiace
kod_nazwa <- dane[1, c(1:2)]
kod_nazwa
kod_nazwa <- as.character(dane[1, c(1:2)])
kod_nazwa
nazwy_miesiecy <- rep(miesiace, each = 14)
kod_nazwa
col_kodnazwa <- dane[, c(1:2)]
(col_kodnazwa <- dane[, c(1:2)])
(col_kodnazwa <- na.omit(dane[, c(1:2)]))
podtabele <- list()
# Wybór indeksów kolumn z nazwami, kodami oraz początkiem kolejnych miesięcy
indeksy <- c(1, 2, seq(3, ncol(dane), by = 14))
# Przechowuje indeksy kolejnych miesięcy
indeksy_miesiecy <- seq(3, ncol(dane), by = 14)
# Pętla po indeksach miesięcy
for (i in 1:length(indeksy_miesiecy)) {
# Pobranie indeksów kolumn dla aktualnego miesiąca
start <- indeksy_miesiecy[i]
end <- min(start + 13, ncol(dane)) # Niechcemy wyjść poza zakres
# Wybór nazwy aktualnego miesiąca
nazwa_miesiaca <- colnames(dane)[start]
# Pętla po latach
for (year in 2011:2024) {
# Wybór danych dla aktualnego roku i miesiąca
dane_miesiac <- dane[, c(1, 2, start:end)] # Kolumny z nazwami, kodami oraz dla aktualnego miesiąca
dane_miesiac <- dane_miesiac[2:nrow(dane_miesiac), ] # Usunięcie pierwszego wiersza (z latami)
# Wybór danych tylko dla aktualnego roku
dane_rok <- dane_miesiac[, c(1, 2, year - 2010)] # Kolumny z nazwami, kodami oraz dla aktualnego roku
# Dodanie podtabeli do listy
nazwa_zmiennej <- paste("podtabela_", nazwa_miesiaca, "_", year, sep = "")
podtabele[[nazwa_zmiennej]] <- dane_rok
}
}
# Wyświetlenie pierwszych wierszy z pierwszej podtabeli (dla stycznia 2011)
print(head(podtabele[["podtabela_styczeń_2011"]]))
miesiace
kod_nazwa
indeksy_miesiecy <- seq(3, ncol(dane), by = 14)
(indeksy_miesiecy <- seq(3, ncol(dane), by = 14))
dane_styczen <- dane[,1:16]
dane_styczen
h <- c(dane_styczen[1,1:2], na.omit(dane_styczen[2,]))
h
names(dane_styczen) <- h
View(h)
h <- c(dane_styczen[1,1:2], dane_styczen[2,])
View(h)
na.omit(dane_styczen[2,])
h <- c(dane_styczen[1,1:2], dane_styczen[2,])
View(h)
na.omit(h)
names(dane_styczen) <- h
colnames(dane_styczen) <- h
View(dane_styczen)
h<-na.omit(h)
colnames(dane_styczen) <- h
View(dane_styczen)
h <- c(dane_styczen[1,1:2], dane_styczen[2,])
h<-na.omit(h)
colnames(dane_styczen) <- h
View(dane_styczen)
h
h <- c(dane_styczen[1,1:2], dane_styczen[2,])
h
h <- rbind(dane_styczen[1,1:2], dane_styczen[2,])
h <- rbind(dane_styczen[1,1:2], dane_styczen[2,])
h
h <- rbind(dane_styczen[1,1:2], dane_styczen[2,3:lenght(dane_styczen[2,])])
h <- rbind(dane_styczen[1,1:2], dane_styczen[2,3:length(dane_styczen[2,])])
h <- c(dane_styczen[1,1:2], dane_styczen[2,3:length(dane_styczen[2,])])
h
h1 <- c(dane_styczen[1,1:2], dane_styczen[2,3:length(dane_styczen[2,])])
h1
dane_styczen[1,1:2]
as.character(dane_styczen[1,1:2])
h1 <- c(as.character(dane_styczen[1,1:2]), as.character(dane_styczen[1,1:2][2,3:length(dane_styczen[2,])]))
h1 <- c(as.character(dane_styczen[1,1:2]), as.character(dane_styczen[2,3:length(dane_styczen[2,])]))
h1
colnames(dane_styczen) <- h1
dane_styczen <- dane_styczen %>% slice(-c(1:2))
h1 <- c(as.character(dane_styczen[1,2]), as.character(dane_styczen[2,3:length(dane_styczen[2,])]))
h1
colnames(dane_styczen) <- h1
# tworzenie tabeli tylko dla stycznia
dane_styczen <- dane[,2:16]
View(dane_styczen)
h1 <- c(as.character(dane_styczen[1,2]), as.character(dane_styczen[2,3:length(dane_styczen[2,])]))
h1
colnames(dane_styczen) <- h1
dane_styczen <- dane_styczen %>% slice(-c(1:2))
dane <- read_excel('BEZROBOTNI_REJESTROWANI.xlsx', 2, col_names =  F)
dane <- dane %>% slice(-c(2,4))
# tworzenie tabeli tylko dla stycznia
dane_styczen <- dane[,2:16]
h1 <- c(as.character(dane_styczen[1,2]), as.character(dane_styczen[2,3:length(dane_styczen[2,])]))
colnames(dane_styczen) <- h1
dane_styczen <- dane_styczen %>% slice(-c(1:2))
View(dane_styczen)
h1 <- c(as.character(dane_styczen[1,2]), as.character(dane_styczen[1,3:length(dane_styczen[2,])]))
h1
dane <- read_excel('BEZROBOTNI_REJESTROWANI.xlsx', 2, col_names =  F)
dane <- dane %>% slice(-c(2,4))
# tworzenie tabeli tylko dla stycznia
dane_styczen <- dane[,2:16]
dane <- read_excel('BEZROBOTNI_REJESTROWANI.xlsx', 2, col_names =  F)
library(dplyr)
dane <- dane %>% slice(-c(2,4))
# tworzenie tabeli tylko dla stycznia
dane_styczen <- dane[,2:16]
h1 <- c(as.character(dane_styczen[1,2]), as.character(dane_styczen[1,3:length(dane_styczen[2,])]))
h1
View(dane_styczen)
h1 <- c(as.character(dane_styczen[1,1]), as.character(dane_styczen[2,3:length(dane_styczen[2,])]))
h1
colnames(dane_styczen) <- h1
dane_styczen <- dane_styczen %>% slice(-c(1:2))
View(dane_styczen)
colnames(dane_styczen) <- h1
dane_styczen <- dane_styczen %>% slice(-c(1:2))
dane_styczen <- dane_styczen %>% slice(-1:2)
dane_styczen <- dane_styczen %>% slice(-1)
# tworzenie tabeli tylko dla stycznia
dane_styczen <- dane[,2:16]
dane_styczen <- dane_styczen %>% slice(-1)
colnames(dane_styczen) <- h1
dane_styczen <- dane_styczen %>% slice(-c(1:))
dane_styczen <- dane_styczen %>% slice(-c(1:2))
# tworzenie tabeli tylko dla stycznia
dane_styczen <- dane[,2:16]
h1 <- c(as.character(dane_styczen[1,1]), as.character(dane_styczen[2,3:length(dane_styczen[2,])]))
colnames(dane_styczen) <- h1
dane_styczen <- dane_styczen %>% slice(-c(1:2))
# tworzenie tabeli tylko dla stycznia
dane_styczen <- dane[,2:16]
h1 <- c(as.character(dane_styczen[1,1]), as.character(dane_styczen[2,3:length(dane_styczen[2,])]))
dane_styczen <- dane_styczen %>% slice(-c(1:2))
colnames(dane_styczen) <- h1
View(dane_styczen)
# chcemy porownac tylko 2014 i 2024
dane_styczen[c(1, 3)]
# chcemy porownac tylko 2014 i 2024
dane_styczen[c(1, 4, 15), ]
# chcemy porownac tylko 2014 i 2024
dane_styczen[c(1, 4, 15) ]
# tworzenie tabeli tylko dla stycznia
dane_styczen <- dane[,2:16]
View(dane_styczen)
h1 <- c(as.character(dane_styczen[1,1]), as.character(dane_styczen[2,3:length(dane_styczen[2,])]))
h1
h1 <- c(as.character(dane_styczen[1,1]), as.character(dane_styczen[2,2:length(dane_styczen[2,])]))
h1
dane_styczen <- dane_styczen %>% slice(-c(1:2))
colnames(dane_styczen) <- h1
View(dane_styczen)
# chcemy porownac tylko 2014 i 2024
dane_styczen[c(1, 4, 15) ]
# chcemy porownac tylko 2014 i 2024
dane_styczen[c(1, 5, 15) ]
# chcemy porownac tylko 2014 i 2024
gen_dane <- dane_styczen[c(1, 5, 15) ]
View(gen_dane)
