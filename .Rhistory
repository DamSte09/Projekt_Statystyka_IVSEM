dane <- read_excel('BEZROBOTNI_REJESTROWANI.xlsx', 2, col_names =  F)
View(dane)
library(dplyr)
dane <- dane %>% slice(-c(2,4))
dane_styczen <- dane[,2:16]
View(dane_styczen)
h1 <- c(as.character(dane_styczen[1,1]), as.character(dane_styczen[2,2:length(dane_styczen[2,])]))
h1
dane_styczen <- dane_styczen %>% slice(-c(1:2))
colnames(dane_styczen) <- h1
View(dane_styczen)
gen_dane <- dane_styczen[c(1, 5, 15) ]
View(gen_dane)
(typeof(gen_dane$`2014`))
gen_dane$`2014` <- as.numeric(gen_dane$`2014`)
gen_dane$`2024` <- as.numeric(gen_dane$`2024`)
(srednia_2014 <- mean(gen_dane$`2014`))
(srednia_2024 <- mean(gen_dane$`2024`))
(odchylenie_2014 <- sd(gen_dane$`2014`))
(odchylenie_2024 <- sd(gen_dane$`2024`))
(wspol_zm_2014 <- (odchylenie_2014 / srednia_2014) * 100)
(wspol_zm_2024 <- (odchylenie_2024 / srednia_2024) * 100)
(kwantyl1_2014 <- quantile(gen_dane$`2014`, probs = 0.25))
(mediana_2014 <- median(gen_dane$`2014`))
(kwantyl3_2014 <- quantile(gen_dane$`2014`, probs = 0.75))
(kwantyl1_2024 <- quantile(gen_dane$`2024`, probs = 0.25))
(mediana_2024 <- median(gen_dane$`2024`))
(kwantyl3_2024 <- quantile(gen_dane$`2024`, probs = 0.75))
# Wartość minimalna dla każdej kolumny
(min_values <- sapply(gen_dane[, c("2014", "2024")], min))
# Wartość maksymalna dla każdej kolumny
(max_values <- sapply(gen_dane[, c("2014", "2024")], max))
(rozstep_2014 <- max_values[1] - min_values[1])
(rozstep_2024 <- max_values[2]- min_values[2])
(war_2014 <- var(gen_dane$`2014`))
(war_2024 <- var(gen_dane$`2024`))
## Skośność
install.packages("e1071")
library(e1071)
(skosnosc_2014 <- round(skewness(gen_dane$`2014`), 3))
(skosnosc_2024 <- round(skewness(gen_dane$`2024`), 3))
## Dominanta
(dominanta_2014 <- as.numeric(names(which.max(table(gen_dane$`2014`)))))
(dominanta_2024 <- as.numeric(names(which.max(table(gen_dane$`2024`)))))
## Kurtoza
kurtoza_2014 <- kurtosis(gen_dane$`2014`)
kurtoza_2014 <- kurtosis(gen_dane$`2024`)
library(ggplot2)
boxplot(gen_dane$`2014`, main = "Wykres pudełkowy ilości osób bezrobotnych",
ylab = "Ilość osób bezrobotnych uprzednio pracujących")
ggplot(gen_dane, aes(x=`2014`)) +
geom_histogram( binwidth=1000,
color="darkblue", fill="lightblue") +
labs(title="Histogram osób bezrobotnych",x="Ilość osób", y="Ilość powiatów")
## Wykres dominanty
ggplot() +
stat_ecdf(data = gen_data, aes(x = `2014`), geom = "step", color = "blue") +
stat_ecdf(data = gen_data, aes(x = `2024`), geom = "step", color = "red") +
labs(title = "Dystrybuanta cen", x = "Cena (USD)", y = "Dystrybuanta") +
theme_minimal()
## Wykres dominanty
ggplot() +
stat_ecdf(data = gen_dane, aes(x = `2014`), geom = "step", color = "blue") +
stat_ecdf(data = gen_dane, aes(x = `2024`), geom = "step", color = "red") +
labs(title = "Dystrybuanta cen", x = "Cena (USD)", y = "Dystrybuanta") +
theme_minimal()
## Wykres dominanty
ggplot() +
stat_ecdf(data = gen_dane, aes(x = `2014`), geom = "step", color = "blue") +
stat_ecdf(data = gen_dane, aes(x = `2024`), geom = "step", color = "red") +
labs(title = "Dystrybuanta ludzi bezrobotnych",
x = "ilość ludzi bezrobotnych", y = "Dystrybuanta") +
theme_minimal()
dystrybuanta <- ecdf(gen_dane)
dys <- ecdf(gen_dane)
dys <- ecdf(gen_dane$`2024`)
plot(dys, verticals = TRUE, main = "Wykres dystrybuanty", xlab = "Wartość", ylab = "Dystrybuanta")
ggplot(gen_dane, aes(`2014`, `2024`)) +
geom_step(color = "blue") +
labs(title = "Wykres dystrybuanty", x = "Wartość", y = "Dystrybuanta")
dane <- c(1, 2, 3, 4, 5, 5, 5, 6, 6, 6)
# Obliczenie empirycznej dystrybuanty
dystrybuanta_df <- data.frame(x = sort(unique(dane)), Fx = ecdf(dane)(sort(unique(dane))))
View(dystrybuanta_df)
ggplot(gen_dane, aes(x = `2014`)) +
stat_ecdf(geom = "step", color = "blue") +
labs(title = "Wykres dystrybuanty", x = "Wartość", y = "Dystrybuanta")
ggplot(dystrybuanta_df, aes(x, Fx)) +
geom_step(color = "blue") +
labs(title = "Wykres dystrybuanty", x = "Wartość", y = "Dystrybuanta")
ggplot(gen_dane, aes(x = `2014`)) +
stat_ecdf(geom = "step", color = "blue") +
labs(title = "Wykres dystrybuanty", x = "Wartość", y = "Dystrybuanta")
ggplot(gen_dane, aes(x = `2014`)) +
stat_ecdf(geom = "step", color = "blue") +
labs(title = "Wykres dystrybuanty", x = "Ilość ludzi bezrobotnych", y = "Dystrybuanta")
## Wykres dominanty
ggplot() +
stat_ecdf(data = gen_dane, aes(x = `2014`), geom = "step", color = "blue") +
stat_ecdf(data = gen_dane, aes(x = `2024`), geom = "step", color = "red") +
labs(title = "Dystrybuanta ludzi bezrobotnych",
x = "ilość ludzi bezrobotnych", y = "Dystrybuanta") +
theme_minimal()
ggplot(gen_dane, aes(x = `2014`)) +
stat_ecdf(geom = "step", color = "blue") +
labs(title = "Wykres dystrybuanty", x = "Ilość ludzi bezrobotnych", y = "Dystrybuanta")
theme_minimal()
ggplot(gen_dane, aes(x = `2014`)) +
stat_ecdf(geom = "step", color = "blue") +
labs(title = "Wykres dystrybuanty", x = "Ilość ludzi bezrobotnych", y = "Dystrybuanta")
theme_minimal()
ggplot(gen_dane, aes(x = `2014`)) +
stat_ecdf(geom = "step", color = "blue") +
labs(title = "Wykres dystrybuanty", x = "Ilość ludzi bezrobotnych", y = "Dystrybuanta") +
theme_minimal()
ggplot(gen_dane, aes(x = `2014`)) +
stat_ecdf(geom = "step", color = "blue") +
labs(title = "Wykres dystrybuanty",x = "Ilość ludzi bezrobotnych", y = "Dystrybuanta") +
theme_minimal()
dane <- matrix(rnorm(100, mean = 0, sd = 1), nrow = 10)
# Utwórz ramkę danych
dane_df <- expand.grid(
X = seq(1, ncol(dane)),
Y = seq(1, nrow(dane))
)
dane_df$Value <- as.vector(dane)
# Utwórz mapę cieplną
ggplot(dane_df, aes(x = X, y = Y, fill = Value)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +  # Ustawienie palety kolorów
labs(title = "Mapa cieplna", x = "Oś X", y = "Oś Y")
dane <- rnorm(100)
# Utworzenie wykresu kwantyl-kwantyl
qqplot(dane, main = "Wykres kwantyl-kwantyl", xlab = "Teoretyczne kwantyle", ylab = "Obserwowane kwantyle")
dane <- rnorm(100)
# Utworzenie wykresu kwantyl-kwantyl
qqplot(dane, main = "Wykres kwantyl-kwantyl", xlab = "Teoretyczne kwantyle", ylab = "Obserwowane kwantyle")
library(survival)
# Przykładowe dane
czas <- c(10, 20, 30, 40, 50)
status <- c(1, 0, 1, 1, 0) # 1 oznacza przetrwanie, 0 oznacza śmierć
# Utworzenie obiektu survival z danymi
surv_obj <- Surv(time = czas, event = status)
# Utworzenie wykresu przeżycia
surv_plot <- survfit(surv_obj ~ 1)
plot(surv_plot, main = "Wykres przeżycia", xlab = "Czas", ylab = "Procent przeżycia", col = "blue")
dane <- rnorm(100)
# Utworzenie wykresu kwantyl-kwantyl
qq <- qqnorm(dane, main = "Wykres kwantyl-kwantyl", xlab = "Teoretyczne kwantyle", ylab = "Obserwowane kwantyle")
qqline(dane, col = "blue")
# Utworzenie wykresu kwantyl-kwantyl
qq <- qqnorm(gen_dane$`2014`, main = "Wykres kwantyl-kwantyl", xlab = "Teoretyczne kwantyle", ylab = "Obserwowane kwantyle")
stat_ecdf(aes(x = `2024`), geom = "step", color = "blue") +
labs(title = "Wykres dystrybuanty",x = "Ilość ludzi bezrobotnych", y = "Dystrybuanta") +
theme_minimal()
library(ggplot2)
ggplot(gen_dane) +
stat_ecdf(aes(x = `2014`), geom = "step", color = "red")
stat_ecdf(aes(x = `2024`), geom = "step", color = "blue") +
labs(title = "Wykres dystrybuanty",x = "Ilość ludzi bezrobotnych", y = "Dystrybuanta") +
theme_minimal()
ggplot(gen_dane) +
stat_ecdf(aes(x = `2014`), geom = "step", color = "red") +
stat_ecdf(aes(x = `2024`), geom = "step", color = "blue") +
labs(title = "Wykres dystrybuanty",x = "Ilość ludzi bezrobotnych", y = "Dystrybuanta") +
theme_minimal()
(war_2014 <- var(gen_dane$`2014`))
(war_2024 <- var(gen_dane$`2024`))
(skosnosc_2014 <- round(skewness(gen_dane$`2014`), 3))
(skosnosc_2024 <- round(skewness(gen_dane$`2024`), 3))
library(e1071)
(skosnosc_2014 <- round(skewness(gen_dane$`2014`), 3))
(skosnosc_2024 <- round(skewness(gen_dane$`2024`), 3))
(rozstep_2014 <- max_values[1] - min_values[1])
(rozstep_2024 <- max_values[2]- min_values[2])
# Wartość minimalna dla każdej kolumny
(min_values <- sapply(gen_dane[, c("2014", "2024")], min))
# Wartość maksymalna dla każdej kolumny
(max_values <- sapply(gen_dane[, c("2014", "2024")], max))
(kwantyl1_2024 <- quantile(gen_dane$`2024`, probs = 0.25))
(kwantyl1_2014 <- quantile(gen_dane$`2014`, probs = 0.25))
(mediana_2014 <- median(gen_dane$`2014`))
(mediana_2024 <- median(gen_dane$`2024`))
(kwantyl3_2024 <- quantile(gen_dane$`2024`, probs = 0.75))
(kwantyl3_2014 <- quantile(gen_dane$`2014`, probs = 0.75))
(wspol_zm_2014 <- (odchylenie_2014 / srednia_2014) * 100)
(wspol_zm_2024 <- (odchylenie_2024 / srednia_2024) * 100)
(odchylenie_2014 <- sd(gen_dane$`2014`))
(odchylenie_2024 <- sd(gen_dane$`2024`))
(srednia_2014 <- mean(gen_dane$`2014`))
(srednia_2024 <- mean(gen_dane$`2024`))
## Dominanta
(dominanta_2014 <- as.numeric(names(which.max(table(gen_dane$`2014`)))))
(dominanta_2024 <- as.numeric(names(which.max(table(gen_dane$`2024`)))))
## Kurtoza
kurtoza_2014 <- kurtosis(gen_dane$`2014`)
kurtoza_2014 <- kurtosis(gen_dane$`2024`)
## Kurtoza
(kurtoza_2014 <- kurtosis(gen_dane$`2014`))
(kurtoza_2014 <- kurtosis(gen_dane$`2024`))
# Test t-Studenta dla dwóch próbek niezależnych
t_test2 <- t.test(gen_dane$`2014`, gen_dane$`2024`)
print(t_test2)
# Test t-Studenta dla dwóch próbek niezależnych
t_test2 <- t.test(gen_dane$`2014`, gen_dane$`2024`, paired = F)
print(t_test2)
t_test2$p.value
t_test2$conf.int
round(t_test2$conf.int,2)
t_test2$estimate
# Test t-Studenta dla dwóch próbek niezależnych
t_test2 <- t.test(gen_dane$`2014`, gen_dane$`2024`, paired = F)
print(t_test2)
t_test2$alternative
t_test2$parameter
t_test2$statistic
t_test2$p.value
## Kurtoza
(kurtoza_2014 <- kurtosis(gen_dane$`2014`))
(kurtoza_2014 <- kurtosis(gen_dane$`2024`))
library(e1071)
## Kurtoza
(kurtoza_2014 <- kurtosis(gen_dane$`2014`))
(kurtoza_2014 <- kurtosis(gen_dane$`2024`))
boxplot(gen_dane$`2014`, main = "Wykres pudełkowy ilości osób bezrobotnych",
ylab = "Ilość osób bezrobotnych uprzednio pracujących")
ggplot(gen_dane, aes(x=`2014`)) +
geom_histogram( binwidth=1000,
color="darkblue", fill="lightblue") +
labs(title="Histogram osób bezrobotnych",x="Ilość osób", y="Ilość powiatów")
ggplot(gen_dane) +
stat_ecdf(aes(x = `2014`), geom = "step", color = "red") +
stat_ecdf(aes(x = `2024`), geom = "step", color = "blue") +
labs(title = "Wykres dystrybuanty",x = "Ilość ludzi bezrobotnych", y = "Dystrybuanta") +
theme_minimal()
library(ggplot2)
boxplot(gen_dane$`2014`, main = "Wykres pudełkowy ilości osób bezrobotnych",
ylab = "Ilość osób bezrobotnych uprzednio pracujących")
ggplot(gen_dane, aes(x=`2014`)) +
geom_histogram( binwidth=1000,
color="darkblue", fill="lightblue") +
labs(title="Histogram osób bezrobotnych",x="Ilość osób", y="Ilość powiatów")
ggplot(gen_dane) +
stat_ecdf(aes(x = `2014`), geom = "step", color = "red") +
stat_ecdf(aes(x = `2024`), geom = "step", color = "blue") +
labs(title = "Wykres dystrybuanty",x = "Ilość ludzi bezrobotnych", y = "Dystrybuanta") +
theme_minimal()
ggplot(gen_dane, aes(x=`2014`)) +
geom_histogram( binwidth=1000,
color="darkblue", fill="lightblue") +
labs(title="Histogram osób bezrobotnych",x="Ilość osób", y="Ilość powiatów")
boxplot(gen_dane$`2014`, main = "Wykres pudełkowy ilości osób bezrobotnych",
ylab = "Ilość osób bezrobotnych uprzednio pracujących")
ggplot(gen_dane, aes(x = `2014`, y = `2024`, fill = `2014`)) +
geom_boxplot() +
labs(title = "Wykres pudełkowy dla dwóch grup", x = "Grupa", y = "Wartość") +
theme_minimal()
ggplot(gen_dane, aes(x = `2014`, fill = `2014`)) +
geom_boxplot() +
labs(title = "Wykres pudełkowy dla dwóch grup", x = "Grupa", y = "Wartość") +
theme_minimal()
ggplot(gen_dane, aes(x = `2014`)) +
geom_boxplot() +
labs(title = "Wykres pudełkowy dla dwóch grup", x = "Grupa", y = "Wartość") +
theme_minimal()
ggplot(gen_dane, aes(y = `2014`)) +
geom_boxplot() +
labs(title = "Wykres pudełkowy dla dwóch grup", x = "Grupa", y = "Wartość") +
theme_minimal()
ggplot(gen_dane, aes(y = `2014`)) +
geom_boxplot(alpha = 0.2) +
labs(title = "Wykres pudełkowy dla dwóch grup", x = "Grupa", y = "Wartość") +
theme_minimal()
ggplot(gen_dane, aes(y = `2014`)) +
geom_boxplot(fill="slateblue", alpha = 0.2) +
labs(title = "Wykres pudełkowy dla dwóch grup", x = "Grupa", y = "Wartość") +
theme_minimal()
boxplot(gen_dane$`2014`, main = "Wykres pudełkowy ilości osób bezrobotnych",
ylab = "Ilość osób bezrobotnych uprzednio pracujących")
ggplot(gen_dane, aes(y = `2014`)) +
geom_boxplot(fill="slateblue", alpha = 0.2) +
labs(title = "Wykres pudełkowy dla dwóch grup", x = "Grupa", y = "Wartość") +
theme_minimal()
ggplot(gen_dane) +
geom_histogram( binwidth=1000,
color="darkblue", fill="lightblue") +
labs(title="Histogram osób bezrobotnych",x="Ilość osób", y="Ilość powiatów")
ggplot(gen_dane, aes(x=`2014`)) +
geom_histogram( binwidth=1000,
color="darkblue", fill="lightblue") +
labs(title="Histogram osób bezrobotnych",x="Ilość osób", y="Ilość powiatów")
ggplot(gen_dane) +
geom_boxplot(fill="slateblue", alpha = 0.2) +
labs(title = "Wykres pudełkowy dla dwóch grup", x = "Grupa", y = "Wartość") +
theme_minimal()
ggplot(gen_dane, aes(y = (`2014`, `2024`))) +
ggplot(gen_dane, aes(y = (`2014` `2024`))) +
ggplot(gen_dane, aes(y = c(`2014`, `2024`))) +
geom_boxplot(fill="slateblue", alpha = 0.2) +
labs(title = "Wykres pudełkowy dla dwóch grup", x = "Grupa", y = "Wartość") +
theme_minimal()
ggplot(gen_dane, aes(y = `2014`)) +
geom_boxplot(fill="slateblue", alpha = 0.2) +
labs(title = "Wykres pudełkowy dla dwóch grup", x = "Grupa", y = "Wartość") +
theme_minimal()
ggplot(gen_dane, aes(y = `2014`)) +
geom_boxplot(fill="slateblue", alpha = 0.2) +
labs(title = "Wykres pudełkowy dla dwóch grup", x = "Grupa", y = "Wartość") +
theme_minimal()
ggplot(gen_dane, aes(y = `2014`)) +
geom_boxplot(fill="slateblue", alpha = 0.2) +
labs(title = "Wykres pudełkowy dla dwóch grup", y = "Wartość") +
theme_minimal()
install.packages("tidyr")
install.packages("ggplot2")
library(tidyr)
library(tidyr)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
# Przekształcenie danych do formatu długiego
gen_dane_long <- pivot_longer(gen_dane, cols = c(`2014`, `2025`),
names_to = "Year", values_to = "Unemployed")
# Zobacz przekształcone dane
print(gen_dane_long)
# Utworzenie wykresu pudełkowego dla obu lat
ggplot(gen_dane_long, aes(x = Year, y = Unemployed, fill = Year)) +
geom_boxplot() +
labs(title = "Wykres pudełkowy ilości osób bezrobotnych",
x = "Rok",
y = "Ilość osób bezrobotnych uprzednio pracujących") +
theme_minimal()
library(ggplot2)
# Utworzenie wykresu pudełkowego dla obu lat
ggplot(gen_dane_long, aes(x = Year, y = Unemployed, fill = Year)) +
geom_boxplot() +
labs(title = "Wykres pudełkowy ilości osób bezrobotnych",
x = "Rok",
y = "Ilość osób bezrobotnych uprzednio pracujących") +
theme_minimal()
# Przekształcenie danych do formatu długiego
gen_dane_long <- pivot_longer(gen_dane, cols = c(`2014`, `2025`),
names_to = "Year", values_to = "Unemployed")
library(tidyr)
install.packages("tidyr")
install.packages("tidyr")
install.packages("tidyr")
(srednia_2014 <- mean(gen_dane$`2014`))
(srednia_2024 <- mean(gen_dane$`2024`))
(odchylenie_2014 <- sd(gen_dane$`2014`))
(odchylenie_2024 <- sd(gen_dane$`2024`))
(wspol_zm_2014 <- (odchylenie_2014 / srednia_2014) * 100)
(wspol_zm_2024 <- (odchylenie_2024 / srednia_2024) * 100)
(war_2014 <- var(gen_dane$`2014`))
(war_2024 <- var(gen_dane$`2024`))
gen_dane_long <- melt(gen_dane, variable.name = 'Rok', value.name = 'Bezrobotni')
#install.packages("reshape2")
library(reshape2)
gen_dane_long <- melt(gen_dane, variable.name = 'Rok', value.name = 'Bezrobotni')
View(gen_dane_long)
ggplot(gen_dane_long, aes(x = Rok, y = Bezrobotni, fill = Rok)) +
geom_boxplot() +
labs(title = "Wykres pudełkowy ilości osób bezrobotnych",
y = "Ilość osób bezrobotnych uprzednio pracujących") +
theme_minimal()
library(ggplot2)
ggplot(gen_dane_long, aes(x = Rok, y = Bezrobotni, fill = Rok)) +
geom_boxplot() +
labs(title = "Wykres pudełkowy ilości osób bezrobotnych",
y = "Ilość osób bezrobotnych uprzednio pracujących") +
theme_minimal()
ggplot(gen_dane, aes(x=`2014`)) +
geom_histogram( binwidth=1000,
color="darkblue", fill="lightblue") +
labs(title="Histogram osób bezrobotnych",x="Ilość osób", y="Ilość powiatów")
ggplot(gen_dane) +
stat_ecdf(aes(x = `2014`), geom = "step", color = "red") +
stat_ecdf(aes(x = `2024`), geom = "step", color = "blue") +
labs(title = "Wykres dystrybuanty",
x = "Ilość ludzi bezrobotnych", y = "Dystrybuanta") +
theme_minimal()
View(h1)
# Test t-Studenta dla dwóch próbek zależnych (te same powiaty w roznych latach)
t_test2 <- t.test(gen_dane$`2014`, gen_dane$`2024`,
paired = P, alternative = "two.sided")
# Test t-Studenta dla dwóch próbek zależnych (te same powiaty w roznych latach)
t_test2 <- t.test(gen_dane$`2014`, gen_dane$`2024`,
paired = P, alternative = "two.sided")
# Test t-Studenta dla dwóch próbek zależnych (te same powiaty w roznych latach)
t_test2 <- t.test(gen_dane$`2014`, gen_dane$`2024`,
paired = T, alternative = "two.sided")
print(t_test2)
# Test t-Studenta dla dwóch próbek zależnych (te same powiaty w roznych latach)
t_test2 <- t.test(gen_dane$`2014`, gen_dane$`2024`,
paired = T)
print(t_test2)
t_test2$p.value
wilc<-wilcox.test(gen_dane$`2014`, gen_dane$`2024`, paired = T)
print(wilc)
shapiro.test(gen_dane$`2014`)
shapiro.test(gen_dane$`2024`)
roznica <- gen_dane$`2024` - gen_dane$`2014`
shapiro.test(roznica)
wilc<-wilcox.test(gen_dane$`2014`, gen_dane$`2024`, paired = T)
print(wilc)
wilc<-wilcox.test(gen_dane$`2014`, gen_dane$`2024`, paired = T)
print(wilc)
wilc$p.value
fit <- lm(gen_dane$`2014` ~ gen_dane$`2024`)
# Utworzenie wykresu rozrzutu z linią regresji
plot(gen_dane$`2014`, gen_dane$`2024`, main = "Wykres rozrzutu z linią regresji", xlab = "Zmienna X", ylab = "Zmienna Y")
# Utworzenie wykresu rozrzutu z linią regresji
plot(gen_dane$`2014`, gen_dane$`2024`, main = "Wykres rozrzutu z linią regresji", xlab = "Zmienna X", ylab = "Zmienna Y")
abline(fit, col = "red")
# Utworzenie wykresu rozrzutu z linią regresji
ggplot(gen_dane_long, aes(x = Rok, y = Bezrobotni)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Wykres rozrzutu z linią regresji", x = "Zmienna X", y = "Zmienna Y")
set.seed(123)
x <- rnorm(100, mean = 50, sd = 10)  # Przykładowe dane x
y <- 2 * x + rnorm(100, mean = 0, sd = 5)  # Przykładowe dane y
# Stworzenie data frame
data <- data.frame(x = x, y = y)
# Wykres ggplot
ggplot(data, aes(x = x, y = y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Wykres rozrzutu z linią regresji", x = "Zmienna X", y = "Zmienna Y")
library(ggplot2)
# Dane dotyczące liczby bezrobotnych w styczniu z lat 2014 i 2024
bezrobotni <- c(500, 520)  # Przykładowe dane
# Stworzenie data frame
data <- data.frame(Rok = c("2014", "2024"), Bezrobotni = bezrobotni)
# Wykres ggplot
ggplot(data, aes(x = Rok, y = Bezrobotni)) +
geom_point() +
labs(title = "Porównanie liczby bezrobotnych w styczniu",
x = "Rok", y = "Liczba bezrobotnych") +
theme_minimal()
roznica <- gen_dane$`2024` - gen_dane$`2014`
# Wykres ggplot
ggplot(gen_dane_long, aes(x = Rok, y = Bezrobotni)) +
geom_point() +
labs(title = "Porównanie liczby bezrobotnych w styczniu",
x = "Rok", y = "Liczba bezrobotnych") +
theme_minimal()
wilc<-wilcox.test(gen_dane$`2014`, gen_dane$`2024`, paired = T)
# Utworzenie wykresu kwantyl-kwantyl
qq <- qqnorm(gen_dane$`2014`, main = "Wykres kwantyl-kwantyl", xlab = "Teoretyczne kwantyle", ylab = "Obserwowane kwantyle")
ggplot(gen_dane, aes(sample = 2014, q = 2024)) +
geom_qq() +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed") +
labs(title = "Wykres kwantyl-kwantyl",
x = "Kwantyle danych z 2014 roku",
y = "Kwantyle danych z 2024 roku") +
theme_minimal()
ggplot(gen_dane, aes(sample = `2014`, q = `2024`)) +
geom_qq() +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed") +
labs(title = "Wykres kwantyl-kwantyl",
x = "Kwantyle danych z 2014 roku",
y = "Kwantyle danych z 2024 roku") +
theme_minimal()
ggplot(gen_dane, aes(sample = `2014`, group = 1)) +
geom_qq(aes(sample = `2024`)) +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed") +
labs(title = "Wykres kwantyl-kwantyl",
x = "Kwantyle danych z 2014 roku",
y = "Kwantyle danych z 2024 roku") +
theme_minimal()
ggplot(gen_dane, aes(sample = `2014`, group = 1)) +
geom_qq(aes(sample = `2024`)) +
geom_abline(intercept = 1, slope = 1, color = "red", linetype = "dashed") +
labs(title = "Wykres kwantyl-kwantyl",
x = "Kwantyle danych z 2014 roku",
y = "Kwantyle danych z 2024 roku") +
theme_minimal()
ggplot(gen_dane, aes(sample = `2014`, group = 1)) +
geom_qq(aes(sample = `2024`)) +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed") +
labs(title = "Wykres kwantyl-kwantyl",
x = "Kwantyle danych z 2014 roku",
y = "Kwantyle danych z 2024 roku") +
theme_minimal()
qqline(dane, col = "blue")
# Utworzenie wykresu kwantyl-kwantyl
qq <- qqnorm(gen_dane$`2014`, main = "Wykres kwantyl-kwantyl", xlab = "Teoretyczne kwantyle", ylab = "Obserwowane kwantyle")
ggplot(gen_dane, aes(sample = `2014`, group = 1)) +
geom_qq(aes(sample = `2024`)) +
geom_abline(intercept = 0, slope = 1, color = "red", linetype = "dashed") +
labs(title = "Wykres kwantyl-kwantyl",
x = "Kwantyle danych z 2014 roku",
y = "Kwantyle danych z 2024 roku") +
theme_minimal()
ggplot(gen_dane_long, aes(x = Rok, y = Bezrobotni)) +
geom_point() +
labs(title = "Wykres różnicy liczby bezrobotnych",
x = "Rok", y = "Różnica w liczbie bezrobotnych") +
theme_minimal()
data <- data.frame(Rok = rep(c("2014", "2024"), each = 100),
Bezrobotni = roznice)
# Wykres ggplot
ggplot(data, aes(x = Rok, y = Bezrobotni)) +
geom_point() +
labs(title = "Wykres różnicy liczby bezrobotnych",
x = "Rok", y = "Różnica w liczbie bezrobotnych") +
theme_minimal()
data <- data.frame(Rok = rep(c("2014", "2024"), each = 100),
Bezrobotni = roznica)
